version: 2.1

jobs:
  util:
    docker:
      - image: darakeon/netcore
    steps:
      - checkout
      - restore_cache:
          keys:
            - dotnet-{{ checksum "Source/Util/Util.csproj" }}
      - run:
          name: dependencies
          command: dotnet restore Source/Util/Util.csproj
      - save_cache:
          key: dotnet-{{ checksum "Source/Util/Util.csproj" }}
          paths:
            - ~/.nuget/packages
      - run:
          name: build
          command: dotnet build -c Release --no-restore Source/Util/Util.csproj
      - run:
          path: Source/Util
          name: security check
          command: |
            RESULT=$(dotnet list package --vulnerable --include-transitive)

            echo "$RESULT"

            NUMBER_OF_PROJECTS=1
            EXPECTED=$(expr $NUMBER_OF_PROJECTS + 4)
            CURRENT=$(echo "$RESULT" | wc -l)

            if [ $CURRENT != $EXPECTED ]; then
                exit 1
            fi
      - run:
          name: pack
          command: dotnet pack -o packs -c Release --no-restore Source/Util/Util.csproj
      - store_artifacts:
          path: packs
      - run:
          name: upload
          command: dotnet nuget push --source "${NUGET_FEED_URL}" --api-key="${NUGET_KEY}" packs/*.nupkg --skip-duplicate

  nhibernate:
    docker:
      - image: darakeon/netcore
    steps:
      - checkout
      - restore_cache:
          keys:
            - dotnet-{{ checksum "Source/NHibernate/NHibernate.csproj" }}
      - run:
          name: dependencies
          command: dotnet restore Source/NHibernate/NHibernate.csproj
      - save_cache:
          key: dotnet-{{ checksum "Source/NHibernate/NHibernate.csproj" }}
          paths:
            - ~/.nuget/packages
      - run:
          name: build
          command: dotnet build -c Release --no-restore Source/NHibernate/NHibernate.csproj
      - run:
          path: Source/NHibernate
          name: security check
          command: |
            RESULT=$(dotnet list package --vulnerable --include-transitive)

            echo "$RESULT"

            NUMBER_OF_PROJECTS=1
            EXPECTED=$(expr $NUMBER_OF_PROJECTS + 4)
            CURRENT=$(echo "$RESULT" | wc -l)

            if [ $CURRENT != $EXPECTED ]; then
                exit 1
            fi
      - run:
          name: pack
          command: dotnet pack -o packs -c Release --no-restore Source/NHibernate/NHibernate.csproj
      - store_artifacts:
          path: packs
      - run:
          name: upload
          command: dotnet nuget push --source "${NUGET_FEED_URL}" --api-key="${NUGET_KEY}" packs/*.nupkg --skip-duplicate

  mvc:
    docker:
      - image: darakeon/netcore
    steps:
      - checkout
      - restore_cache:
          keys:
            - dotnet-{{ checksum "Source/MVC/MVC.csproj" }}
      - run:
          name: dependencies
          command: dotnet restore Source/MVC/MVC.csproj
      - save_cache:
          key: dotnet-{{ checksum "Source/MVC/MVC.csproj" }}
          paths:
            - ~/.nuget/packages
      - run:
          name: build
          command: dotnet build -c Release --no-restore Source/MVC/MVC.csproj
      - run:
          path: Source/MVC
          name: security check
          command: |
            RESULT=$(dotnet list package --vulnerable --include-transitive)

            echo "$RESULT"

            NUMBER_OF_PROJECTS=1
            EXPECTED=$(expr $NUMBER_OF_PROJECTS + 4)
            CURRENT=$(echo "$RESULT" | wc -l)

            if [ $CURRENT != $EXPECTED ]; then
                exit 1
            fi
      - run:
          name: pack
          command: dotnet pack -o packs -c Release --no-restore Source/MVC/MVC.csproj
      - store_artifacts:
          path: packs
      - run:
          name: upload
          command: dotnet nuget push --source "${NUGET_FEED_URL}" --api-key="${NUGET_KEY}" packs/*.nupkg --skip-duplicate

  tfa:
    docker:
      - image: darakeon/netcore
    steps:
      - checkout
      - restore_cache:
          keys:
            - dotnet-{{ checksum "Source/TwoFactorAuth/TwoFactorAuth.csproj" }}
      - run:
          name: dependencies
          command: dotnet restore Source/TwoFactorAuth/TwoFactorAuth.csproj
      - save_cache:
          key: dotnet-{{ checksum "Source/TwoFactorAuth/TwoFactorAuth.csproj" }}
          paths:
            - ~/.nuget/packages
      - run:
          name: build
          command: dotnet build -c Release --no-restore Source/TwoFactorAuth/TwoFactorAuth.csproj
      - run:
          path: Source/TwoFactorAuth
          name: security check
          command: |
            RESULT=$(dotnet list package --vulnerable --include-transitive)

            echo "$RESULT"

            NUMBER_OF_PROJECTS=1
            EXPECTED=$(expr $NUMBER_OF_PROJECTS + 4)
            CURRENT=$(echo "$RESULT" | wc -l)

            if [ $CURRENT != $EXPECTED ]; then
                exit 1
            fi
      - run:
          name: pack
          command: dotnet pack -o packs -c Release --no-restore Source/TwoFactorAuth/TwoFactorAuth.csproj
      - store_artifacts:
          path: packs
      - run:
          name: upload
          command: dotnet nuget push --source "${NUGET_FEED_URL}" --api-key="${NUGET_KEY}" packs/*.nupkg --skip-duplicate

  xml:
    docker:
      - image: darakeon/netcore
    steps:
      - checkout
      - restore_cache:
          keys:
            - dotnet-{{ checksum "Source/XML/XML.csproj" }}
      - run:
          name: dependencies
          command: dotnet restore Source/XML/XML.csproj
      - save_cache:
          key: dotnet-{{ checksum "Source/XML/XML.csproj" }}
          paths:
            - ~/.nuget/packages
      - run:
          name: build
          command: dotnet build -c Release --no-restore Source/XML/XML.csproj
      - run:
          path: Source/XML
          name: security check
          command: |
            RESULT=$(dotnet list package --vulnerable --include-transitive)

            echo "$RESULT"

            NUMBER_OF_PROJECTS=1
            EXPECTED=$(expr $NUMBER_OF_PROJECTS + 4)
            CURRENT=$(echo "$RESULT" | wc -l)

            if [ $CURRENT != $EXPECTED ]; then
                exit 1
            fi
      - run:
          name: pack
          command: dotnet pack -o packs -c Release --no-restore Source/XML/XML.csproj
      - store_artifacts:
          path: packs
      - run:
          name: upload
          command: dotnet nuget push --source "${NUGET_FEED_URL}" --api-key="${NUGET_KEY}" packs/*.nupkg --skip-duplicate

  eml:
    docker:
      - image: darakeon/netcore
    steps:
      - checkout
      - restore_cache:
          keys:
            - dotnet-{{ checksum "Source/Eml/Eml.csproj" }}-{{ checksum "Source/Eml.Tests/Eml.Tests.csproj" }}
      - run:
          name: dependencies
          command: dotnet restore Source/Eml/Eml.csproj && dotnet restore Source/Eml.Tests/Eml.Tests.csproj
      - save_cache:
          key: dotnet-{{ checksum "Source/Eml/Eml.csproj" }}-{{ checksum "Source/Eml.Tests/Eml.Tests.csproj" }}
          paths:
            - ~/.nuget/packages
      - run:
          name: test
          command: dotnet test Source/Eml.Tests/Eml.Tests.csproj
      - run:
          name: build
          command: dotnet build -c Release --no-restore Source/Eml/Eml.csproj
      - run:
          path: Source/Eml
          name: security check
          command: |
            RESULT=$(dotnet list package --vulnerable --include-transitive)

            echo "$RESULT"

            NUMBER_OF_PROJECTS=1
            EXPECTED=$(expr $NUMBER_OF_PROJECTS + 4)
            CURRENT=$(echo "$RESULT" | wc -l)

            if [ $CURRENT != $EXPECTED ]; then
                exit 1
            fi
      - run:
          path: Source/Eml.Tests
          name: security check
          command: |
            RESULT=$(dotnet list package --vulnerable --include-transitive)

            echo "$RESULT"

            NUMBER_OF_PROJECTS=1
            EXPECTED=$(expr $NUMBER_OF_PROJECTS + 4)
            CURRENT=$(echo "$RESULT" | wc -l)

            if [ $CURRENT != $EXPECTED ]; then
                exit 1
            fi
      - run:
          name: pack
          command: dotnet pack -o packs -c Release --no-restore Source/Eml/Eml.csproj
      - store_artifacts:
          path: packs
      - run:
          name: upload
          command: dotnet nuget push --source "${NUGET_FEED_URL}" --api-key="${NUGET_KEY}" packs/*.nupkg --skip-duplicate

workflows:
  version: 2.1
  all:
    jobs:
      - util
      - nhibernate
      - mvc
      - tfa
      - xml
      - eml
